version: "3.5"

services:
  postgres:
    image: quay.io/soharaki/addresscode-database:latest
    container_name: postgres-local
    ports:
      - 5432:5432
    volumes:
      - pglog:/var/log/postgresql
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRESQL_DATABASE: address
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgres-local
    networks:
      - my-network

  pgadmin4:
    image: dpage/pgadmin4:4.28
    container_name: pgadmin4-local
    ports:
      - 8000:80
    volumes:
      - pgadmin4:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: root
      PGADMIN_DEFAULT_PASSWORD: root
    hostname: pgadmin4-local
    depends_on:
      - postgres
    networks:
      - my-network

  addresscode-service:
    container_name: addresscode-service-local
    build:
      context: ./
      dockerfile: src/main/docker/Dockerfile.jvm
    ports:
      - 8080:8080
      - 1898:1898
    environment:
      POSTGRESQL_SERVICE_HOST: postgres-local
    links:
      - postgres
    depends_on:
      - postgres
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    links:
      - addresscode-service
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    links:
      - prometheus
    volumes:
      - ./etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./etc/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - my-network

volumes:
  pgadmin4:
    driver: local
  pglog:
    driver: local

networks:
  my-network:
    name: flight-recorder-network
